# Generated by Django 2.2.10 on 2020-06-02 13:19

import autoservice.customer.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_auto_20200531_2041'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('types', models.CharField(choices=[('common', 'Comum'), ('professional', 'Profissional')], default='common', max_length=255, verbose_name='Tipo')),
                ('phone', models.CharField(max_length=11, verbose_name='Telefone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=autoservice.customer.models.get_profile_file_path, verbose_name='Foto')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('zipcode', models.CharField(blank=True, max_length=8, null=True, verbose_name='CEP')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('district', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('complement', models.TextField(blank=True, null=True, verbose_name='Complemento')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2, verbose_name='Avaliação')),
                ('expiration', models.DateField(blank=True, null=True, verbose_name='Expiração')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='core.City', verbose_name='Cidade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
                'ordering': ['-rating', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('zipcode', models.CharField(max_length=8, verbose_name='CEP')),
                ('address', models.CharField(max_length=255, verbose_name='Endereço')),
                ('number', models.CharField(max_length=255, verbose_name='Número')),
                ('district', models.CharField(max_length=255, verbose_name='Bairro')),
                ('complement', models.TextField(blank=True, null=True, verbose_name='Complemento')),
                ('datetime', models.DateTimeField(verbose_name='Data/Hora')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('status', models.CharField(choices=[('done', 'Realizado'), ('recused', 'Recusado'), ('approved', 'Aprovado'), ('requested', 'Aguardando aprovação')], max_length=255, verbose_name='Status')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.Category', verbose_name='Categoria')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.City', verbose_name='Cidade')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_services', to='customer.Profile', verbose_name='Cliente')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professional_services', to='customer.Profile', verbose_name='Profissional')),
            ],
            options={
                'verbose_name': 'Serviço',
            },
        ),
        migrations.CreateModel(
            name='ServiceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('image', models.ImageField(upload_to=autoservice.customer.models.get_service_file_path, verbose_name='Imagem')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='customer.Service', verbose_name='Serviço')),
            ],
            options={
                'verbose_name': 'Serviço',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('note', models.DecimalField(decimal_places=1, default=0, max_digits=2, verbose_name='Nota')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Texto')),
                ('from_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_from', to='customer.Profile', verbose_name='De')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_to', to='customer.Profile', verbose_name='Para')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfileCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_categories', to='core.Category', verbose_name='Serviço')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='customer.Profile', verbose_name='Perfil')),
                ('type_pay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='core.TypePay', verbose_name='Tipo de Pagamento')),
            ],
            options={
                'verbose_name': 'Categoria do perfil',
                'verbose_name_plural': 'Categorias do perfil',
            },
        ),
        migrations.CreateModel(
            name='PayRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Código')),
                ('payment_link', models.URLField(blank=True, null=True, verbose_name='Link Pagamento')),
                ('payment_type', models.CharField(choices=[('ticket', 'Boleto'), ('credit_card', 'Cartão de Crédito')], max_length=255, verbose_name='Tipo de Pagamento')),
                ('status', models.CharField(choices=[('1', 'Aguardando pagamento'), ('2', 'Em análise'), ('3', 'Pago'), ('4', 'Disponível'), ('5', 'Em disputa'), ('6', 'Devolvido'), ('7', 'Cancelado'), ('8', 'Debitado'), ('9', 'Retenção temporária')], default='1', max_length=1, verbose_name='Status')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pay_requests', to='customer.Profile', verbose_name='Perfil')),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('image', models.ImageField(upload_to=autoservice.customer.models.get_gallery_file_path, verbose_name='Imagem')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='customer.Profile', verbose_name='Perfil')),
            ],
            options={
                'verbose_name': 'Galeria',
                'verbose_name_plural': 'Trabalhos realizados',
                'ordering': ['-created_at'],
            },
        ),
    ]
