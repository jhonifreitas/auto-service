# Generated by Django 2.2.10 on 2020-05-02 16:49

import autoservice.customer.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_auto_20200419_1450'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('types', models.CharField(choices=[('common', 'Comum'), ('autonomous', 'Autônomo')], default='common', max_length=255, verbose_name='Tipo')),
                ('phone', models.CharField(max_length=11, verbose_name='Telefone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=autoservice.customer.models.get_profile_file_path, verbose_name='Foto')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2, verbose_name='Avaliação')),
                ('about', models.TextField(blank=True, null=True, verbose_name='Sobre')),
                ('expiration', models.DateField(default=datetime.date(2020, 7, 31), verbose_name='Expiração')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profiles', to='core.City', verbose_name='Cidade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
                'ordering': ['-rating', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('note', models.DecimalField(decimal_places=1, default=0, max_digits=2, verbose_name='Nota')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Texto')),
                ('from_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_from', to='customer.Profile', verbose_name='De')),
                ('to_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_to', to='customer.Profile', verbose_name='Para')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProfileService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('start_hour', models.TimeField(verbose_name='Horário Inicial')),
                ('end_hour', models.TimeField(verbose_name='Horário Final')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Preço')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='customer.Profile', verbose_name='Perfil')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_services', to='core.Service', verbose_name='Serviço')),
                ('type_pay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='core.TypePay', verbose_name='Tipo de Pagamento')),
                ('week', models.ManyToManyField(related_name='services', to='core.Week', verbose_name='Dias da Semana')),
            ],
            options={
                'verbose_name': 'Serviço do perfil',
                'verbose_name_plural': 'Serviços do perfil',
            },
        ),
        migrations.CreateModel(
            name='JobDone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('image', models.ImageField(upload_to=autoservice.customer.models.get_jobs_done_file_path, verbose_name='Imagem')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs_done', to='customer.Profile', verbose_name='Perfil')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs_done', to='core.Service', verbose_name='Serviço')),
            ],
            options={
                'verbose_name': 'Trabalho realizado',
                'verbose_name_plural': 'Trabalhos realizados',
                'ordering': ['service', '-created_at'],
            },
        ),
    ]
